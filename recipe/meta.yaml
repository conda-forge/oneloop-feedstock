{% set name = "oneloop" %}
{% set version = "3.7.2" %}

package:
  # Have top level name be unique from any outputs
  # c.f. https://github.com/conda-forge/conda-forge.github.io/blob/abfc33db28c35e9a8f6b719d0021768f0d5d06be/docs/maintainer/knowledge_base.md?plain=1#L1749
  name: {{ name }}-split
  version: {{ version }}

source:
  url: https://bitbucket.org/hameren/{{ name }}/get/v{{ version }}.zip
  sha256: fa36c0716ab0526cb98693094b7efa2219434bed9f59429f123b654a33309848

build:
  number: 3

outputs:
  - name: {{ name }}

    build:
      skip: true  # [win]
      run_exports:
        - {{ pin_subpackage('oneloop', max_pin='x.x') }}
      script:
        - sed -i "s|FC = gfortran|FC = $FC|g" Config
        - sed -i "s|FFLAGS = -O|FFLAGS = $FFLAGS|g" Config
        # Disable quad precision on systems that don't support libquadmath
        # (linux-aarch64, osx)
        - sed -i "/QPKIND/d" Config  # [linux-aarch64 or osx]
        - cat Config
        # Get .dylib extension for macOS
        - sed -i "s|libavh_olo.so|libavh_olo${SHLIB_EXT}|g" create.py  # [osx]
        # FIXME: Link in libgfortran for arm64 macOS
        - sed -i "s|fc,'-shared',|fc,'-shared','-L$PREFIX/lib','-lgfortran',|g" create.py  # [osx and arm64]
        - python create.py dynamic
        - mkdir -p $PREFIX/include/oneloop
        - mv *.mod $PREFIX/include/oneloop/
        - mv libavh_olo${SHLIB_EXT} $PREFIX/lib/
        - ./clean.sh

    requirements:
      build:
        - {{ stdlib('c') }}
        - {{ compiler('fortran') }}
        - sed
        - python

    test:
      source_files:
        - src/
        - example/
      requires:
        - {{ compiler('fortran') }}
        - python
      commands:
        - test -f $PREFIX/lib/libavh_olo${SHLIB_EXT}
        - test -f $PREFIX/include/oneloop/avh_olo_version.mod
        - test -f $PREFIX/include/oneloop/avh_olo_units.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_kinds.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_arrays.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_prec.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_print.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_auxfun.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_olog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_dilog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_bnlog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_qmplx.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_bub.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_tri.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_box.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_boxc.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_kinds.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_arrays.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_prec.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_print.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_auxfun.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_olog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_dilog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_bnlog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_qmplx.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_bub.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_tri.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_box.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_boxc.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp.mod
        - test -f $PREFIX/include/oneloop/avh_olo.mod

        - cd example
        - export WITHLT=no
        - export LTVSNge26=yes
        - export WITHCOLI=no
        - ../src/avh_pc_exe.py "case" "LT" "${WITHLT}" example16.f
        - ../src/avh_pc_exe.py "case" "LTVSNge26" "${WITHLT}${LTVSNge26}" example16.f
        - ../src/avh_pc_exe.py "case" "COLI" "${WITHCOLI}" example16.f
        - unset WITHLT
        - unset LTVSNge26
        - unset WITHCOLI
        # Use $LDFLAGS for more generic solution to -L$PREFIX/lib
        - $FC $FFLAGS example16.f -o example -I$PREFIX/include/oneloop $LDFLAGS -lavh_olo
        - ./example < input  # [build_platform == target_platform]

  - name: {{ name }}-static

    build:
      skip: true  # [win]
      script:
        - sed -i "s|FC = gfortran|FC = $FC|g" Config
        - sed -i "s|FFLAGS = -O|FFLAGS = $FFLAGS|g" Config
        # Disable quad precision on systems that don't support libquadmath
        # (linux-aarch64, osx)
        - sed -i "/QPKIND/d" Config  # [linux-aarch64 or osx]
        - cat Config
        - python create.py
        - mkdir -p $PREFIX/include/oneloop
        - mv *.mod $PREFIX/include/oneloop/
        - mv libavh_olo.a $PREFIX/lib/
        - ./clean.sh

    requirements:
      build:
        - {{ stdlib('c') }}
        - {{ compiler('fortran') }}
        - sed
        - python

    test:
      source_files:
        - src/
        - example/
      requires:
        - {{ compiler('fortran') }}
        - python
      commands:
        - test -f $PREFIX/lib/libavh_olo.a
        - test ! -f $PREFIX/lib/libavh_olo${SHLIB_EXT}
        - test -f $PREFIX/include/oneloop/avh_olo_version.mod
        - test -f $PREFIX/include/oneloop/avh_olo_units.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_kinds.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_arrays.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_prec.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_print.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_auxfun.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_olog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_dilog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_bnlog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_qmplx.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_bub.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_tri.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_box.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp_boxc.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_kinds.mod
        - test -f $PREFIX/include/oneloop/avh_olo_dp.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_arrays.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_prec.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_print.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_auxfun.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_olog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_dilog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_bnlog.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_qmplx.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_bub.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_tri.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_box.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp_boxc.mod
        - test -f $PREFIX/include/oneloop/avh_olo_qp.mod
        - test -f $PREFIX/include/oneloop/avh_olo.mod

        - cd example
        - export WITHLT=no
        - export LTVSNge26=yes
        - export WITHCOLI=no
        - ../src/avh_pc_exe.py "case" "LT" "${WITHLT}" example16.f
        - ../src/avh_pc_exe.py "case" "LTVSNge26" "${WITHLT}${LTVSNge26}" example16.f
        - ../src/avh_pc_exe.py "case" "COLI" "${WITHCOLI}" example16.f
        - unset WITHLT
        - unset LTVSNge26
        - unset WITHCOLI
        # Use $LDFLAGS for more generic solution to -L$PREFIX/lib
        - $FC $FFLAGS example16.f -o example -I$PREFIX/include/oneloop $LDFLAGS -lavh_olo
        - ./example < input  # [build_platform == target_platform]

about:
  home: https://bitbucket.org/hameren/oneloop/
  summary: 'OneLOop: A library of one-loop scalar functions'
  description: |
    OneLOop is a program to evaluate the one-loop scalar 1-point, 2-point,
    3-point and 4-point functions, for all kinematical configurations relevant
    for collider-physics, and for any non-positive imaginary parts of the
    internal squared masses. It deals with all UV and IR divergences within
    dimensional regularization. Furthermore, it provides routines to evaluate
    these functions using straightforward numerical integration.
  license: GPL-3.0-only
  license_family: GPL
  license_file: COPYING
  doc_url: https://helac-phegas.web.cern.ch/OneLOop.html
  dev_url: https://bitbucket.org/hameren/oneloop/

extra:
  feedstock-name: oneloop
  recipe-maintainers:
    - matthewfeickert
